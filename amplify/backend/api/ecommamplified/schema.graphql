# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type Post @model 
    @auth(rules: [
        { allow: owner },
        { allow: public, operations: [read]}
    ])
{
    id: ID! @primaryKey
    title: String!
    comments: [Comment] @hasMany(indexName: "postIdIndex", fields: ["id"])
}

type Comment @model
# Migrated @key to @primaryKey + @index
    @auth(rules: [
        { allow: owner },
        { allow: public, operations: [read]}
    ])
{
    id: ID! @primaryKey
    postId: ID! @index(name: "postIdIndex")
    content: String!
}

type Product @model
{
    id: ID! @primaryKey
    name: String
    price: Float
    category: String
    @index(name: "productCategoryIndex", sortKeyFields: ["createdAt"], queryField: "productsByCategory")
    @index(name: "productByCategoryAndNameIndex", sortKeyFields: ["name"], queryField: "productsByCategoryAndName")
    @index(name: "productByCategoryAndInventoryIndex", sortKeyFields: ["inventory"], queryField: "productsByCategoryAndInventory")
    @index(name: "productByCategoryAndPriceIndex", sortKeyFields: ["price"], queryField: "productsByCategoryAndPrice")
    inventory: Int
    createdAt: String
    baseType: String 
    @index(name: "productInventoryAmountIndex", sortKeyFields: ["inventory"], queryField: "productsByInventoryAmount")
    @index(name: "productInventoryPriceIndex", sortKeyFields: ["price"], queryField: "productsByPrice")
    @index(name: "productNameSearchIndex", sortKeyFields: ["name"], queryField: "productSearchByName")
    @index(name: "productCategorySearchIndex", sortKeyFields: ["category"], queryField: "productSearchByCategory")
}


